{"version":3,"file":"static/js/122.1b4ca1d3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.jsx","shared/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"SearchBar_btn__PKGSc\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchBar.module.css';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = event => {\n    const search = event.target.value;\n    setSearch(search);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(search);\n    reset();\n  };\n\n  const reset = () => {\n    setSearch('');\n  };\n  return (\n    <>\n      <header>\n        <form onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.btn}>\n            <span>Search</span>\n          </button>\n\n          <input\n            name=\"search\"\n            value={search}\n            onChange={handleChange}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            className={css.input}\n          />\n        </form>\n      </header>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"SearchMovies_moviesList__Ye5rj\",\"moviesItem\":\"SearchMovies_moviesItem__5KuiV\",\"posterList\":\"SearchMovies_posterList__GKitp\",\"poster\":\"SearchMovies_poster__QXJnf\"};","import { useState, useEffect } from 'react';\nimport { Loader } from 'shared/Loader/Loader';\nimport { API } from '../../shared/api';\nimport { Link } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport css from './SearchMovies.module.css';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nconst SearchMovies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('search');\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const results = await API.fetchSearchMovie(search);\n\n        setSearchMovies(results);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (search) {\n      getMovies();\n    }\n  }, [search]);\n\n  const updateSearchHandler = search => {\n    setSearchParams({\n      search,\n    });\n  };\n\n  return (\n    <div className=\"section\">\n      <SearchBar onSubmit={updateSearchHandler} />\n      {isLoading && <Loader />}\n      {search\n        ? !isLoading &&\n          searchMovies.length === 0 && (\n            <p>\n              There are no results for the request \"{search}\". Enter the correct\n              one value.\n            </p>\n          )\n        : ''}\n      <ul className={css.moviesList}>\n        {searchMovies.map(({ title, id, poster_path }) => {\n          if (!title || !poster_path) return null;\n          return (\n            <li key={id} className={css.posterList}>\n              <Link\n                to={`/movies/${id}`}\n                className={css.moviesItem}\n                state={{ from: location }}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                  className={css.poster}\n                />\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchMovies;\n","import axios from 'axios';\nconst API_KEY = 'api_key=f2276557f452d5e4f3dac26aab188cd0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const API = {\n  async fetchTrendingMovies() {\n    const response = await axios(`${BASE_URL}/trending/all/week?${API_KEY}`);\n    return response.data;\n  },\n\n  async fetchMovieById(movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n    return response.data;\n  },\n\n  async fetchSearchMovie(searhMovie) {\n    const response = await axios(\n      `${BASE_URL}/search/movie?query=${searhMovie}&${API_KEY}&page=1`\n    );\n    return response.data.results;\n  },\n\n  async fetchActorsCredits(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`\n    );\n    return response.data.cast;\n  },\n\n  async fetchMovieReviews(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  },\n};\n"],"names":["onSubmit","useState","search","setSearch","reset","event","preventDefault","type","className","css","name","value","onChange","target","autoComplete","autoFocus","placeholder","searchMovies","setSearchMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","API","results","getMovies","Loader","length","map","title","id","poster_path","to","state","from","src","alt","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","fetchMovieById","movieId","fetchSearchMovie","searhMovie","fetchActorsCredits","cast","fetchMovieReviews"],"sourceRoot":""}