{"version":3,"file":"static/js/76.7a2d5b4e.chunk.js","mappings":"6PACA,EAAyB,qBAAzB,EAA4D,0BAA5D,EAAmG,yBAAnG,EAAyI,yB,SCoDzI,EA/Ca,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GAFjB,SAGuBI,EAAAA,EAAAA,mBAAuBH,GAH9C,OAGUI,EAHV,OAKIP,EAAaO,GALjB,yEAQIL,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdM,EACD,GAAE,CAACL,IAKJ,OACE,gBAAIM,UAAWC,EAAf,UACGT,IAAa,SAACU,EAAA,EAAD,IACbZ,EAAUa,OAAS,EALfb,EAAUc,QAAO,SAAAC,GAAK,OAAIA,EAAMC,YAAV,IAMHC,KAClB,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWJ,EAAmB,EAAnBA,aAC/B,OACE,gBAAaN,UAAWC,EAAxB,WACE,gBACEU,IAAG,yCAAoCL,GACvCM,IAAKH,EACLT,UAAWC,KAEb,eAAID,UAAWC,EAAf,SAAgCQ,KAChC,uBAAIC,MAPGF,EAUZ,IAEH,+CAGT,C,8FClDKK,EAAU,2CACVC,EAAW,+BAEJjB,EAAM,CACXkB,oBADW,WACY,OAAD,sHACHC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,8BAAkCD,IADpC,cACpBI,EADoB,yBAEnBA,EAASC,MAFU,4CAG3B,EAEKC,eANW,SAMIzB,GAAU,OAAD,sHACLsB,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBpB,EAAtB,YAAiCmB,IADjC,cACtBI,EADsB,yBAErBA,EAASC,MAFY,4CAG7B,EAEKE,iBAXW,SAWMC,GAAa,OAAD,sHACVL,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,+BACQO,EADR,YACsBR,EADtB,YADK,cAC3BI,EAD2B,yBAI1BA,EAASC,KAAKI,SAJY,4CAKlC,EAEKC,mBAlBW,SAkBQ7B,GAAU,OAAD,sHACTsB,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,kBACLpB,EADK,oBACcmB,IAFV,cAC1BI,EAD0B,yBAIzBA,EAASC,KAAKpB,MAJW,4CAKjC,EAEK0B,kBAzBW,SAyBO9B,GAAU,OAAD,sHACRsB,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,kBACLpB,EADK,oBACcmB,EADd,2BADG,cACzBI,EADyB,yBAIxBA,EAASC,KAAKI,SAJU,4CAKhC,E","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","shared/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actors\":\"Cast_actors__lJ2iJ\",\"actorsPhoto\":\"Cast_actorsPhoto__Ol8+n\",\"actorsName\":\"Cast_actorsName__2FjGQ\",\"actorsItem\":\"Cast_actorsItem__B9AN6\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'shared/Loader/Loader';\nimport { API } from '../../shared/api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [castMovie, setCastMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const cast = await API.fetchActorsCredits(movieId);\n\n        setCastMovie(cast);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, [movieId]);\n\n  const filteredActorList = () => {\n    return castMovie.filter(actor => actor.profile_path);\n  };\n  return (\n    <ul className={css.actors}>\n      {isLoading && <Loader />}\n      {castMovie.length > 0\n        ? filteredActorList().map(\n            ({ id, original_name, character, profile_path }) => {\n              return (\n                <li key={id} className={css.actorsItem}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={original_name}\n                    className={css.actorsPhoto}\n                  />\n                  <h3 className={css.actorsName}>{original_name}</h3>\n                  <p>{character}</p>\n                </li>\n              );\n            }\n          )\n        : 'Oooopsss! Probably the movie has no actors'}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = 'api_key=f2276557f452d5e4f3dac26aab188cd0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const API = {\n  async fetchTrendingMovies() {\n    const response = await axios(`${BASE_URL}/trending/all/week?${API_KEY}`);\n    return response.data;\n  },\n\n  async fetchMovieById(movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n    return response.data;\n  },\n\n  async fetchSearchMovie(searhMovie) {\n    const response = await axios(\n      `${BASE_URL}/search/movie?query=${searhMovie}&${API_KEY}&page=1`\n    );\n    return response.data.results;\n  },\n\n  async fetchActorsCredits(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`\n    );\n    return response.data.cast;\n  },\n\n  async fetchMovieReviews(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  },\n};\n"],"names":["useState","castMovie","setCastMovie","isLoading","setIsLoading","movieId","useParams","useEffect","API","cast","getMovies","className","css","Loader","length","filter","actor","profile_path","map","id","original_name","character","src","alt","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","fetchMovieById","fetchSearchMovie","searhMovie","results","fetchActorsCredits","fetchMovieReviews"],"sourceRoot":""}