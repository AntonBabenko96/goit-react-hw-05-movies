{"version":3,"file":"static/js/943.25ba3a76.chunk.js","mappings":"uQACA,EAA6B,6BAA7B,EAAuE,6BAAvE,EAAiH,6BAAjH,EAAuJ,yB,SCoDvJ,EA/CiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GAFjB,SAGuBI,EAAAA,EAAAA,sBAHvB,OAGUC,EAHV,OAKIP,EAASO,EAAKC,SALlB,yEAQIN,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdO,EACD,GAAE,KAGD,gBAAIC,UAAWC,EAAf,UACGV,IAAa,SAACW,EAAA,EAAD,IAEbb,EAAMc,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACvB,OAAKF,GAEH,eAAaJ,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEM,GAAE,kBAAaF,GACfL,UAAWC,EACXZ,MAAO,CAAEmB,KAAMf,GAHjB,WAKE,gBACEgB,IAAG,yCAAoCH,GACvCI,IAAKN,EACLJ,UAAWC,IAEZG,MAXIC,GAFQ,IAiBpB,MAGN,ECzCD,EATkB,WAChB,OACE,iBAAKL,UAAU,UAAf,WACE,iDACA,SAAC,EAAD,MAGL,C,8FCPKW,EAAU,2CACVC,EAAW,+BAEJhB,EAAM,CACXiB,oBADW,WACY,OAAD,sHACHC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,8BAAkCD,IADpC,cACpBI,EADoB,yBAEnBA,EAASlB,MAFU,4CAG3B,EAEKmB,eANW,SAMIC,GAAU,OAAD,sHACLH,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBK,EAAtB,YAAiCN,IADjC,cACtBI,EADsB,yBAErBA,EAASlB,MAFY,4CAG7B,EAEKqB,iBAXW,SAWMC,GAAa,OAAD,sHACVL,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,+BACQO,EADR,YACsBR,EADtB,YADK,cAC3BI,EAD2B,yBAI1BA,EAASlB,KAAKC,SAJY,4CAKlC,EAEKsB,mBAlBW,SAkBQH,GAAU,OAAD,sHACTH,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,kBACLK,EADK,oBACcN,IAFV,cAC1BI,EAD0B,yBAIzBA,EAASlB,KAAKwB,MAJW,4CAKjC,EAEKC,kBAzBW,SAyBOL,GAAU,OAAD,sHACRH,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,kBACLK,EADK,oBACcN,EADd,2BADG,cACzBI,EADyB,yBAIxBA,EAASlB,KAAKC,SAJU,4CAKhC,E","sources":["webpack://react-homework-template/./src/components/Trending/Trending.module.css?bc7e","components/Trending/Trending.jsx","pages/HomePage/HomePage.jsx","shared/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"Trending_moviesList__leRja\",\"moviesItem\":\"Trending_moviesItem__JzWS0\",\"posterList\":\"Trending_posterList__ezIjJ\",\"poster\":\"Trending_poster__ZNW7Q\"};","import { API } from '../../shared/api';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Loader } from 'shared/Loader/Loader';\nimport css from '../Trending/Trending.module.css';\n\nconst Trending = () => {\n  const [state, setState] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const data = await API.fetchTrendingMovies();\n\n        setState(data.results);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <ul className={css.moviesList}>\n      {isLoading && <Loader />}\n\n      {state.map(({ title, id, poster_path }) => {\n        if (!title) return null;\n        return (\n          <li key={id} className={css.posterList}>\n            <Link\n              to={`/movies/${id}`}\n              className={css.moviesItem}\n              state={{ from: location }}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n                className={css.poster}\n              />\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Trending;\n","import  Trending  from '../../components/Trending/Trending';\n const HomePage = () => {\n  return (\n    <div className=\"section\">\n      <h2>Tranding for a week</h2>\n      <Trending />\n    </div>\n  );\n};\n\nexport default HomePage;","import axios from 'axios';\nconst API_KEY = 'api_key=f2276557f452d5e4f3dac26aab188cd0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const API = {\n  async fetchTrendingMovies() {\n    const response = await axios(`${BASE_URL}/trending/all/week?${API_KEY}`);\n    return response.data;\n  },\n\n  async fetchMovieById(movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n    return response.data;\n  },\n\n  async fetchSearchMovie(searhMovie) {\n    const response = await axios(\n      `${BASE_URL}/search/movie?query=${searhMovie}&${API_KEY}&page=1`\n    );\n    return response.data.results;\n  },\n\n  async fetchActorsCredits(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`\n    );\n    return response.data.cast;\n  },\n\n  async fetchMovieReviews(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  },\n};\n"],"names":["useState","state","setState","isLoading","setIsLoading","location","useLocation","useEffect","API","data","results","getMovies","className","css","Loader","map","title","id","poster_path","to","from","src","alt","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","fetchMovieById","movieId","fetchSearchMovie","searhMovie","fetchActorsCredits","cast","fetchMovieReviews"],"sourceRoot":""}